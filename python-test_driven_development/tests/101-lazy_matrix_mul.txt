The ``101-lazy_matrix_mul`` module
======================

Using ``lazy_matrix_mul``
-------------------

This is an example text file in reStructuredText format.  First import
``lazy_matrix_mul`` from the ``101-lazy_matrix_mul`` module:

	>>> matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul

Now use it:

	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	array([[ 7, 10],
               [15, 22]])

	>>> matrix_mul("a", [[1, 2, 3],[4, 5, 6]])
	Traceback (most recent call last):
    	TypeError: Scalar operands are not allowed, use '*' instead

	>>> matrix_mul([[1, 2, 3],[4, 5, 6]], "a")
	Traceback (most recent call last):
    	TypeError: Scalar operands are not allowed, use '*' instead

	>>> matrix_mul([], [[1, 2, 3],[4, 5, 6]])
	Traceback (most recent call last):
    	ValueError: m_a can't be empty

	>>> matrix_mul([[1, 2, 3],[4, 5, 6]], [[]])
	Traceback (most recent call last):
    	ValueError: shapes (2,3) and (1,0) not aligned: 3 (dim 1) != 1 (dim 0)

	>>> matrix_mul([[1, 2], [3, 'a']], [[1, 2], [3, 4]])
	Traceback (most recent call last):
    	TypeError: invalid data type for einsum

	>>> matrix_mul([[1, 2], [3, 4]], [["1", "2"], ["3", "4"]])
	Traceback (most recent call last):
    	TypeError: invalid data type for einsum

	>>> matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
    	TypeError: setting an array element with a sequence.

	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3]])
	Traceback (most recent call last):
    	TypeError: setting an array element with a sequence.

	>>> matrix_mul([[1, 2, 5], [3, 4, 7]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	ValueError: shapes (2,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)

	>>> matrix_mul([[1, 2, 5], [3, 4, 7]], )
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

	>>> matrix_mul()
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	>>> matrix_mul(["a", [1, 2, 3]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists

	>>> matrix_mul([[1, 2, 4], [1, 2, 3]], [1, 2, 3, 4])
	Traceback (most recent call last):
	TypeError: m_b must be a list of lists
