The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Now use it:

Regular case
===========

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Not a number element
==================

	>>> matrix = [
	...     [1, 'a', 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
    	TypeError: matrix must be a matrix (list of lists) of integers/floats

Not equal size row
==================

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5]
	... ]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
    	TypeError: Each row of the matrix must have the same size

Not a number dividend
====================

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 'a')
	Traceback (most recent call last):
    	TypeError: div must be a number

Division by zero
================

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
    	ZeroDivisionError: division by zero

Missing dividend argument
=========================

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

Missing both arguments
======================

	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Division by float('inf')
========================
	
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
